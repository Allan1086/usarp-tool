version: '3.8'

services:
  backend:
    depends_on:
      - db
    expose:
      - ${DOCKER_NODE_PORT}
    build: ./backend
    ports:
      - ${LOCAL_NODE_PORT}:${DOCKER_NODE_PORT}
    env_file: .env
    environment:
      JWT_SECRET: ${JWT_SECRET_KEY}
      LOCAL_NODE_PORT: ${LOCAL_NODE_PORT}
      DOCKER_NODE_PORT: ${DOCKER_NODE_PORT}
      LOCAL_DB_PORT: ${LOCAL_DB_PORT}
      DOCKER_DB_PORT: ${DOCKER_DB_PORT}
      DB_NAME: ${DB_NAME}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_HOST: ${DB_HOST}
      DIALECT: ${DIALECT}
      CORS_ORIGIN: ${CORS_ORIGIN}
    restart: always
    stdin_open: true
    tty: true
    networks:
      - usarptool-network

  db:
    image: mariadb:10.4.14
    container_name: mariadb
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    ports:
      - ${LOCAL_DB_PORT}:${DOCKER_DB_PORT}
    volumes:
      - mariadb-data:/var/lib/mysql
    networks:
      - usarptool-network

  frontend:
    build: ./frontend
    ports:
      - ${FRNTEND_PORT}:80
    networks:
      - usarptool-network


  nginx:
    image: nginx:alpine
    expose:
      - ${NGINX_PORT}
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - frontend
    networks:
      - usarptool-network
  ngrok:
    image: ngrok/ngrok:latest
    ports:
      - 4040:4040
    network_mode: host
    environment:
      NGROK_AUTHTOKEN: ${NGROK_AUTH} #Adicione sua chave de autenticação como variável de ambiente
    command: http 3000  # Comando para expor a porta

networks:
  usarptool-network:
    driver: bridge

volumes:
  mariadb-data:
